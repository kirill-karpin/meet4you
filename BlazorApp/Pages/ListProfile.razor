@page "/list"
@inject ProfileService profileService
@inject LocationService locationService
@using BlazorApp.Models

<PageTitle>List</PageTitle>

<RadzenCard class="my-4">
    <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Start" Wrap="FlexWrap.Wrap">
        <RadzenStack Orientation="Orientation.Vertical" Gap="4px">
            Страна
            <RadzenDropDown TValue="string" TextProperty="Name" ValueProperty="Id" 
                            Data=@countries Size="ButtonSize.Small" Change="@OnChangeAsync" />
        </RadzenStack>
        <RadzenStack Orientation="Orientation.Vertical" Gap="4px">
            Город
            <RadzenDropDown TValue="string" TextProperty="Name" ValueProperty="Id" 
                            Data=@cities Size="ButtonSize.Small" />
        </RadzenStack>
        <RadzenStack Orientation="Orientation.Vertical" Gap="4px">
            Пол
            <RadzenDropDown TValue="string" TextProperty="Text"
                            Data="@(Enum.GetValues(typeof(Gender)).Cast<Gender>().Select(t => new { Text = $"{t}", Value = t }))" Size="ButtonSize.Small" />
        </RadzenStack>
        <RadzenStack Orientation="Orientation.Vertical" Gap="4px">
            Семейное положение
            <RadzenDropDown TValue="string" TextProperty="Text" 
                            Data="@(Enum.GetValues(typeof(FamilyStatus)).Cast<FamilyStatus>().Select(t => new { Text = $"{t}", Value = t }))" Size="ButtonSize.Small" />
        </RadzenStack>
        <RadzenStack Orientation="Orientation.Vertical" Gap="4px">
            Возраст
            <RadzenSlider Range="true" @bind-Value=@range TValue="IEnumerable<int>" Style="margin-top: 16px;" />
        </RadzenStack>
        <RadzenStack Orientation="Orientation.Vertical" Gap="4px">
            Дети
            <RadzenSwitch @bind-Value="@hasChildren" Style="margin-top: 10px;" />
        </RadzenStack>
    </RadzenStack>
</RadzenCard>



@code {
    CountryResponse[]? countries;
    CityResponse[]? cities;
    bool hasChildren;

    IEnumerable<int> range = new int[] { 18, 100 };
    

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        countries = await locationService.GetCountries();
    }

    public async Task OnChangeAsync(object value)
    {
        if (value == null)
            cities = null;
        else
            cities  = await locationService.GetCitiesByCountryId((Guid)value);
    }

    enum Gender
    {
        М,
        Ж
    }
    enum FamilyStatus
    {
        Свободен = 0,
        ВБраке = 1,
        Разведён = 3
    }
}


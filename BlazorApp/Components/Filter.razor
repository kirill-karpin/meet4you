@inject LocationService locationService
@using BlazorApp.Models
@using BlazorApp.Models.List

<RadzenCard>
    <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Start" Wrap="FlexWrap.Wrap">
      @*   <RadzenStack Orientation="Orientation.Vertical" Gap="4px">
            <RadzenText Text="Страна" TextStyle="TextStyle.Subtitle1" TextAlign="TextAlign.Left"></RadzenText>
            <RadzenDropDown TValue="string" TextProperty="Name" ValueProperty="Id"
                            Data=@countries Size="ButtonSize.Small" Change="@CountryChangedAsync" />
        </RadzenStack>
        <RadzenStack Orientation="Orientation.Vertical" Gap="4px">
            <RadzenText Text="Город" TextStyle="TextStyle.Subtitle1" TextAlign="TextAlign.Left"></RadzenText>
            <RadzenDropDown TValue="string" TextProperty="Name" ValueProperty="Id"
                            Data=@cities Size="ButtonSize.Small" />
        </RadzenStack> *@
        <LocationComponent @ref=@locationComponent CityId="@CityId" CountryId="@CountryId"></LocationComponent>

        <RadzenStack Orientation="Orientation.Vertical" Gap="4px">
            <RadzenText Text="Пол" TextStyle="TextStyle.Subtitle1" TextAlign="TextAlign.Left"> </RadzenText>
            <RadzenDropDown Data="@genders" @bind-Value="@_gender" Change=@OnGenderChange>
                <Template>
                    @Enum.GetName(typeof(Gender), context)
                </Template>
            </RadzenDropDown>
        </RadzenStack>
        <RadzenStack Orientation="Orientation.Vertical" Gap="4px">
            <RadzenText Text="Семейное положение" TextStyle="TextStyle.Subtitle1" TextAlign="TextAlign.Left" TagName="TagName.H2"></RadzenText>
            <RadzenDropDown Data="@statuses" @bind-Value="@status" Size="ButtonSize.Small">
                <Template>
                    @Enum.GetName(typeof(FamilyStatus), context)
                </Template>
            </RadzenDropDown>
        </RadzenStack>
        <RadzenStack Orientation="Orientation.Vertical" Gap="4px">
            <RadzenText TextStyle="TextStyle.Subtitle1" TextAlign="TextAlign.Left"> Возраст @range.First() - @range.Last() </RadzenText>
                <RadzenSlider Range="true" Min="18" Max="65" @bind-Value=@range TValue="IEnumerable<int>" Change=@OnAgeChange Style="margin-top: 16px;" />
            </RadzenStack>
            <RadzenStack Orientation="Orientation.Vertical" Gap="4px">
                <RadzenText Text="Дети" TextStyle="TextStyle.Subtitle1" TextAlign="TextAlign.Left" TagName="TagName.H2"></RadzenText>
                <RadzenSwitch @bind-Value="@HasChildren" Style="margin-top: 10px;" />
            </RadzenStack>
            <RadzenStack Orientation="Orientation.Vertical" Style="" Gap="4px">
                <RadzenButton Text="Поиск" Click=OnClick Style="margin-top: 36px; width: 140px; height: 40px" />
            </RadzenStack>
        </RadzenStack>
    </RadzenCard>

    @code {
    LocationComponent locationComponent;

    IEnumerable<FamilyStatus> statuses = Enum.GetValues(typeof(FamilyStatus)).Cast<FamilyStatus>();
    FamilyStatus status = FamilyStatus.Свободен;

    IEnumerable<Gender> genders = Enum.GetValues(typeof(Gender)).Cast<Gender>();
    Gender _gender = Gender.Ж;

    IEnumerable<int> range = new int[] { 18, 65 };

    CountryResponse[]? countries;
    CityResponse[]? cities;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        countries = await locationService.GetCountries();

        AgeFrom = range.First();
        AgeTo = range.Last();
    }

    public void OnGenderChange()
    {
        SelectedGender = _gender == Gender.Ж ? false : true;
        this.StateHasChanged();
    }
    public void OnAgeChange()
    {
        AgeFrom = range.First();
        AgeTo = range.Last();
    }

    public void OnFamilyStatusChange()
    {
        Status = (int)_gender;
        this.StateHasChanged();
    }

    [Parameter]
    public bool HasChildren { get; set; }

    [Parameter]
    public bool SelectedGender { get; set; }

    [Parameter]
    public int AgeFrom { get; set; } 

    [Parameter]
    public int AgeTo { get; set; }

    [Parameter]
    public int Status { get; set; }

    [Parameter]
    public Guid CountryId { get; set; }

    [Parameter]
    public Guid CityId { get; set; }

    [Parameter]
    public EventCallback<MouseEventArgs> OnClick { get; set; }
}

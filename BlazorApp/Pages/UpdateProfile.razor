@page "/updateprofile"
@inject ProfileService profileService;
@using BlazorApp.Models
@using Common
@using User.Dto
@using static User.Dto.UserDto;


<RadzenText TextStyle="TextStyle.H2">Мой профиль</RadzenText>


<RadzenTemplateForm Data="@userDto" Submit="@( async (UserDto args) => { await SubmitHandler(args); })" >
    <RadzenCard class="my-4">
        <RadzenStack Orientation="Orientation.Vertical">
            <RadzenStack Orientation="Orientation.Vertical" Gap="4px">
                <RadzenLabel Text="Дата рождения" Component="RadzenDatePickerBindValue" Style="margin-right: 8px; vertical-align: middle;"/>
                <RadzenDatePicker @bind-Value=@userDto.DateOfBirth Name="RadzenDatePickerBindValue" ShowCalendarWeek/>
            </RadzenStack>
        </RadzenStack>
    </RadzenCard>

    <RadzenCard>
        <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">Имя</RadzenText>
        <RadzenTextBox @bind-Value=userDto.FirstName class="w-100" aria-label="Default TextBox"/>
    </RadzenCard>
    <RadzenCard>
        <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">Фамилия</RadzenText>
        <RadzenTextBox @bind-Value=userDto.LastName class="w-100" aria-label="Default TextBox"/>
    </RadzenCard>
    <RadzenCard>
        <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">Отчество</RadzenText>
        <RadzenTextBox @bind-Value=userDto.Surname class="w-100" aria-label="Default TextBox"/>
    </RadzenCard>
    <RadzenCard>
        <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">О себе</RadzenText>
        <RadzenTextBox @bind-Value=userDto.About class="w-100" aria-label="Default TextBox"/>
    </RadzenCard>

    @*<RadzenCard>
    Семейное положение
<RadzenDropDown TValue="string" TextProperty="Text"
                Data="@(Enum.GetValues(typeof(FamilyStatus)).Cast<FamilyStatus>().Select(t => new { Text = $"{t}", Value = t }))" Size="ButtonSize.Small" />
</RadzenCard>

<RadzenCard>
    Наличие детей
    <RadzenDropDown TValue="string" TextProperty="Text"
                    Data="@(Enum.GetValues(typeof(Children)).Cast<Children>().Select(t => new { Text = $"{t}", Value = t }))" Size="ButtonSize.Small" />
</RadzenCard>*@
      <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.Center" Gap="1rem" Class="rz-mt-8 rz-mb-4">
            <RadzenButton ButtonType="ButtonType.Submit" Size="ButtonSize.Large" Icon="save" Text="Save" />
      </RadzenStack>
</RadzenTemplateForm>

@code {
    User.Dto.UserDto? userDto = new();

    public async Task SubmitHandler(UserDto args)
    {
        Console.WriteLine("send");
        var profile = await profileService.Update(args);
        return;
    }

    protected override async Task OnInitializedAsync()
    {
        var profile = await profileService?.Me()!;
        if (profile != null)
        {
            userDto = profile.User;
        }
    }

    enum FamilyStatus
    {
        Свободен = 0,
        ВБраке = 1,
        Разведён = 3
    }

    enum Children
    {
        Нет = 0,
        Да = 1
    }

}